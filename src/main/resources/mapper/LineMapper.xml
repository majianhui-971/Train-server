<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.LineMapper" >
  <resultMap id="BaseResultMap" type="com.entity.Line" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="start_site" property="startSite" jdbcType="VARCHAR" />
    <result column="end_site" property="endSite" jdbcType="VARCHAR" />
    <result column="pass_site" property="passSite" jdbcType="VARCHAR" />
    <result column="offset_time" property="offsetTime" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, start_site, end_site, pass_site, offset_time, start_time, end_time, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.entity.LineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from line
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from line
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.LineExample" >
    delete from line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.Line" >
    insert into line (id, start_site, end_site,
      pass_site, offset_time, start_time,
      end_time, state, drive_id)
    values (#{id,jdbcType=INTEGER}, #{startSite,jdbcType=VARCHAR}, #{endSite,jdbcType=VARCHAR},
      #{passSite,jdbcType=VARCHAR}, #{offsetTime,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}, #{driveId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Line" >
    insert into line
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="startSite != null" >
        start_site,
      </if>
      <if test="endSite != null" >
        end_site,
      </if>
      <if test="passSite != null" >
        pass_site,
      </if>
      <if test="offsetTime != null" >
        offset_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="startSite != null" >
        #{startSite,jdbcType=VARCHAR},
      </if>
      <if test="endSite != null" >
        #{endSite,jdbcType=VARCHAR},
      </if>
      <if test="passSite != null" >
        #{passSite,jdbcType=VARCHAR},
      </if>
      <if test="offsetTime != null" >
        #{offsetTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.LineExample" resultType="java.lang.Integer" >
    select count(*) from line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectInfoDataByAdmin" resultType="com.entity.Line">

      select
      li.id, li.start_site, li.end_site, li.pass_site, li.offset_time, li.start_time, li.end_time, li.state, li.drive_id, dr.drive_number
      from line li
      left join site s1 on li.start_site = s1.id
      left join site s2 on li.end_site = s2.id
      left join drive dr on dr.id = li.drive_id

      where
      li.state = '0000'

      <if test="fuzzy != null and fuzzy !=''" >
        and (
        li.offset_time LIKE concat(concat('%',#{fuzzy}),'%')
        OR li.start_time LIKE concat(concat('%',#{fuzzy}),'%')
        OR li.end_time LIKE concat(concat('%',#{fuzzy}),'%')
        OR s1.name LIKE concat(concat('%',#{fuzzy}),'%')
        OR s2.name LIKE concat(concat('%',#{fuzzy}),'%')
        )
      </if>

    </select>
    <update id="updateByExampleSelective" parameterType="map" >
    update line
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.startSite != null" >
        start_site = #{record.startSite,jdbcType=VARCHAR},
      </if>
      <if test="record.endSite != null" >
        end_site = #{record.endSite,jdbcType=VARCHAR},
      </if>
      <if test="record.passSite != null" >
        pass_site = #{record.passSite,jdbcType=VARCHAR},
      </if>
      <if test="record.offsetTime != null" >
        offset_time = #{record.offsetTime,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.driveId != null" >
        drive_id = #{record.driveId,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update line
    set id = #{record.id,jdbcType=INTEGER},
      start_site = #{record.startSite,jdbcType=VARCHAR},
      end_site = #{record.endSite,jdbcType=VARCHAR},
      pass_site = #{record.passSite,jdbcType=VARCHAR},
      offset_time = #{record.offsetTime,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Line" >
    update line
    <set >
      <if test="startSite != null" >
        start_site = #{startSite,jdbcType=VARCHAR},
      </if>
      <if test="endSite != null" >
        end_site = #{endSite,jdbcType=VARCHAR},
      </if>
      <if test="passSite != null" >
        pass_site = #{passSite,jdbcType=VARCHAR},
      </if>
      <if test="offsetTime != null" >
        offset_time = #{offsetTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Line" >
    update line
    set start_site = #{startSite,jdbcType=VARCHAR},
      end_site = #{endSite,jdbcType=VARCHAR},
      pass_site = #{passSite,jdbcType=VARCHAR},
      offset_time = #{offsetTime,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
